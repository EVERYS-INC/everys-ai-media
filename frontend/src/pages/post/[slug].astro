---
import ArticleLayout from "../../layouts/ArticleLayout.astro";
import { marked } from 'marked';
import { markedHighlight } from "marked-highlight";

// markedの設定をカスタマイズ
marked.use(
  markedHighlight({
    highlight: function(code, lang) {
      // ハイライトの実装（前回の回答を参照）
    }
  })
);

export async function getStaticPaths() {
  const strapiUrl = import.meta.env.STRAPI_URL;
  const response = await fetch(`${strapiUrl}/api/posts?populate=*`);
  const { data } = await response.json();

  // 最新の記事を取得（最新5件）
  const recentPostsResponse = await fetch(
    `${strapiUrl}/api/posts?sort[0]=createdAt:desc&pagination[limit]=5&fields[0]=title&fields[1]=slug`
  );
  const { data: recentPosts } = await recentPostsResponse.json();

  return data.map((post) => ({
    params: { slug: post.attributes.slug },
    props: { post, recentPosts },
  }));
}

const { post, recentPosts } = Astro.props;

const content = post?.attributes?.content ? marked.parse(post.attributes.content) : '';

// featuredImageのURLを取得
const featuredImageUrl = post.attributes.featuredImage?.data?.attributes?.url
  ? new URL(post.attributes.featuredImage.data.attributes.url, import.meta.env.STRAPI_MEDIA_URL).toString()
  : null;

// カテゴリーを取得
const category = post.attributes.category?.data?.attributes?.name || 'Uncategorized';
---

<ArticleLayout 
  title={post?.attributes?.title || 'No Title'}
  recentPosts={recentPosts}
>
  <article class="max-w-3xl mx-auto px-4">
    <!-- 記事の内容 -->
  </article>
</ArticleLayout>

<!-- スタイル -->